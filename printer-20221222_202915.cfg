# This file is an example config file for hybrid corexy style printers also
# known as Markforged kinematic. One may copy and edit this file to configure
# a new hybrid corexy printer.

# DO NOT COPY THIS FILE WITHOUT CAREFULLY READING AND UPDATING IT
# FIRST. Incorrectly configured parameters may cause damage.

# This configuration is with a Spider control board and two Huvud V0.61 CAN toolhead boards

# See docs/Config_Reference.md for a description of parameters.

[include mainsail.cfg]
[include IDEX_mode.cfg]
#[include klicky-probe-for_VT.cfg]
[include left toolhead.cfg]
[include right toolhead.cfg]
#[include stealthburner_leds.cfg]
#[include KlipperScreen.conf]

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_1E002B000C51303432383339-if00


#[mcu head1]
#canbus_uuid: a62a3a4702f5

#[mcu head0]
#canbus_uuid: cd0403d798dc

[printer]
kinematics: hybrid_corexy
max_velocity: 300
max_accel: 10000
max_accel_to_decel: 10000
max_z_velocity: 10
max_z_accel: 30

#need to be on Klipper Pull Request #5311 to use Input Shaper
#[input_shaper]
#shaper_freq_x: 53
#shaper_type_x: mzv
#shaper_freq_dc: 53 
#shaper_type_dc: mzv
#shaper_freq_y: 40
#shaper_type_y: zv

#[adxl345 head0]
#cs_pin: head0:PB1
#axes_map: y, z, x

#[adxl345 head1]
#cs_pin: head1:PB1
#axes_map: y, z, x

#[resonance_tester]
#accel_chip: adxl345 head1
#probe_points:
#    125,125,20  # an example

[force_move]
enable_force_move:true

########################################
# X Steppers
########################################

[dual_carriage] 
# Socket X extruder3
axis: x
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
microsteps: 32
rotation_distance: 40
endstop_pin: EBBCanright:PB6
position_endstop: 22.4
position_min: 22
position_max: 300
homing_speed: 60
homing_retract_dist: 5
second_homing_speed: 10
homing_positive_dir:false

[tmc2209 dual_carriage]
# Socket X extruder3
uart_pin: PC7
run_current: 0.8
#stealthchop_threshold: 0

[stepper_x]
# Socket Y extruder
#axis: x
step_pin: PE2
dir_pin: !PE3
enable_pin: !PD4
microsteps: 32
rotation_distance: 40
endstop_pin: EBBCanleft:PB6
position_endstop: -50
position_min: -52
position_max: 228
homing_speed: 60
homing_retract_dist: 5
second_homing_speed: 10
homing_positive_dir:false

[tmc2209 stepper_x]
# Socket Y extruder
uart_pin: PE1
run_current: 0.8
#stealthchop_threshold: 0

########################################
# Y Steppers
########################################

[stepper_y]
# Socket Z extruder1
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
microsteps: 32
rotation_distance: 40
endstop_pin:  PF6
position_endstop: 255
position_max: 255
position_min: -10
homing_speed: 40
homing_retract_dist: 5


[tmc2209 stepper_y]
# Socket Z extruder1
uart_pin: PF2
run_current: 0.8
#stealthchop_threshold: 0


[stepper_y1] 
# Socket E0 extruder2
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
microsteps: 32
rotation_distance: 40
endstop_pin: PF5 
#y-max tmc2209_stepper_y1:virtual_endstop

[tmc2209 stepper_y1]
# Socket E0 extruder2
uart_pin: PE4
run_current: 0.8
#stealthchop_threshold: 0

########################################
# Z Steppers
########################################

#[probe]
##	Inductive Probe - Connected to Z MAX
##	This probe is not used for Z height, only Quad Gantry Leveling
##	Connected to Probe Pins
##	If your probe is NO instead of NC, change pin to !PA3
#pin: head0:PB12
#z_offset: 6.1
#x_offset: 0 
#y_offset: 21
#speed: 5
#samples: 3
#samples_tolerance: 0.006
#samples_result: median
#samples_tolerance_retries: 5

[stepper_z]
#Socket 1
step_pin: PF13
dir_pin: !PF12
enable_pin: !PF14
microsteps: 32
rotation_distance: 4
endstop_pin: PF4
#position_endstop: 0.00
position_max: 250
position_min: -10

[tmc2209 stepper_z]
# Socket 1
uart_pin: PC4
run_current: 0.8

[stepper_z2]
#Socket 2
step_pin: PG0
dir_pin: !PG1
enable_pin: !PF15
microsteps: 32
rotation_distance: 4

[tmc2209 stepper_z2]
# Socket 2
uart_pin: PD11
run_current: 0.8

[stepper_z1]
#Socket 3
step_pin: PF11
dir_pin: !PG3
enable_pin: !PG5
microsteps: 32
rotation_distance: 4

[tmc2209 stepper_z1]
# Socket 3
uart_pin: PC6
run_current: 0.8

########################################
# Bed
########################################

[heater_bed]
##	LED-B Output
heater_pin: PA2
sensor_type: Generic 3950
sensor_pin: PF3
##	Adjust Max Power so your heater doesn't warp your bed
##	Target 0.4 W/cm^2
max_power: 0.5
min_temp: 0
max_temp: 120.5
pwm_cycle_time: 0.016
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

########################################
# Sensors and Extras
########################################
[fan] # TODO: this probably isnt right...
pin: PA8

[temperature_sensor chamber]
sensor_type: Generic 3950
sensor_pin: PF7
#pullup_resistor: 2200
#min_temp: -100
#max_temp: 100
#code_id: C

#[output_pin caselight]
##	R Channel - PB6
##	G Channel - PB5
##	B Channel - PB7
#pin: PB2
#pwm: true
#cycle_time: 0.01
#value: 100
#scale: 100
#shutdown_value: 100

[neopixel sb_leds_T0]
pin: EBBCanleft:PD3
#   The pin connected to the neopixel. This parameter must be provided.
chain_count: 3
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
color_order: RGBW
#   Set the pixel order required by the LED hardware. Options are GRB,
#   RGB, GRBW, or RGBW. The default is GRB.
initial_RED: 1
initial_GREEN: 1
initial_BLUE: 1
initial_WHITE: 1.0
#   Sets the initial LED color of the Neopixel. Each value should be
#   between 0.0 and 1.0. The WHITE option is only available on RGBW
#   LEDs. The default for each color is 0.#

[neopixel sb_leds_T1]
pin: EBBCanright:PD3
#   The pin connected to the neopixel. This parameter must be provided.
chain_count: 3
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
color_order: RGBW
#   Set the pixel order required by the LED hardware. Options are GRB,
#   RGB, GRBW, or RGBW. The default is GRB.
initial_RED: 1
initial_GREEN: 1
initial_BLUE: 1
initial_WHITE: 1.0
#   Sets the initial LED color of the Neopixel. Each value should be
#   between 0.0 and 1.0. The WHITE option is only available on RGBW
#   LEDs. The default for each color is 0.#

#####################################################################
# 	Displays
#####################################################################


## 	For the mini12864 Display, the [display] and [neopixel] must be uncommented
# mini12864 LCD Display
# connected to exp1/2 on Z(main) MCU
#[display]
#	mini12864 LCD Display
#lcd_type: uc1701
#cs_pin: PC11
#a0_pin: PD2
#rst_pin: PC10
#encoder_pins: ^PC6,^PC7
#click_pin: ^!PA8
#contrast: 63
#spi_bus: spi1
#spi_software_mosi_pin: PA7
#spi_software_miso_pin: PA6
#spi_software_sclk_pin: PA5

#[neopixel fysetc_mini12864]
#	To control Neopixel RGB in mini12864 display
#pin: PC12
#chain_count: 3
#initial_RED: 1
#initial_GREEN: 1
#initial_BLUE: 1
#color_order: RGB

#	Set RGB values on boot up for each Neopixel. 
#	Index 1 = display, Index 2 and 3 = Knob
#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#        SET_LED LED=fysetc_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

########################################
# Basic Macros
########################################

[gcode_macro _User_Variables]
variable_verbose:               True  # Enable verbose output
variable_travel_speed:          200   # how fast all other travel moves will be performed when running these macros
variable_z_drop_speed:          20    # how fast the z will lower when moving to the z location to clear the probe
variable_home_z_height:         20    # Z when homing

#bed type
variable_gravity:             'bed'   # What goes down with gravity, bed or gantry?
variable_max_bed_y:             250   # maximum Bed size avoids doing a probe_accuracy outside the bed

# if a separate Z endstop switch is in
# use, specify the coordinates of the switch here (Voron).
# Set to 0 to have the probe move to center of bed
variable_z_endstop_x:            147
variable_z_endstop_y:            255


# location to park the toolhead
variable_park_toolhead:         True  # Enable toolhead parking
variable_parkposition_x:        125
variable_parkposition_y:        125
variable_parkposition_z:        30

# Do not modify below
gcode:
    {% set Mx = printer['configfile'].config["stepper_x"]["position_max"]|float %}
    {% set My = printer['configfile'].config["stepper_y"]["position_max"]|float %}
    {% set Ox = printer['configfile'].config["probe"]["x_offset"]|float %}
    {% set Oy = printer['configfile'].config["probe"]["y_offset"]|float %}
    {% set Oz = printer['configfile'].config["probe"]["z_offset"]|float %}


    # If x, y coordinates are set for z endstop, assign them
    {% if z_endstop_x != 0 or z_endstop_y != 0 %}
        SET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_x VALUE={ z_endstop_x }
        SET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_y VALUE={ z_endstop_y }

    # if no x, y coordinates for z endstop, assume probe is endstop and move toolhead to center of bed
    {% else %}
        SET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_x VALUE={ (Mx * 0.5) - Ox }
        SET_GCODE_VARIABLE MACRO=_Probe_Variables VARIABLE=z_endstop_y VALUE={ (My * 0.5) - Oy }
    {% endif %}

# Park Toolhead Routine
[gcode_macro _Park_Toolhead]
gcode:
    {% set P = printer["gcode_macro _User_Variables"].park_toolhead %}
    {% set Px = printer["gcode_macro _User_Variables"].parkposition_x %}
    {% set Py = printer["gcode_macro _User_Variables"].parkposition_y %}
    {% set Pz = printer["gcode_macro _User_Variables"].parkposition_z %}
    {% set St = printer["gcode_macro _User_Variables"].travel_speed * 60 %}
    {% set V = printer["gcode_macro _User_Variables"].verbose %}

    _entry_point function=_Park_Toolhead

    {% if (P and 'xyz' in printer.toolhead.homed_axes) %}
        {% if V %}
            { action_respond_info("Parking Toolhead") }
        {% endif %}
        G0 X{Px} Y{Py} Z{Pz} F{St}
    {% endif %}
    _exit_point function=_Park_Toolhead


[gcode_macro _exit_point]
gcode:
    {% set function  = 'pre_' ~ params.FUNCTION  %}
    {% set move  = params.MOVE|default(0)  %}
    # mandatory to save the new safe position
    M400
    RESTORE_GCODE_STATE NAME={function} MOVE={move}

# Homeing Override
[homing_override]
axes: xyz
gcode:

    IDEX_HOME_Y
    IDEX_HOME_X
    T0
    G1 X147 Y255
    G28 Z0
    # park the toolhead
    _Park_Toolhead
    _exit_point function=homing_override

   

[gcode_macro IDEX_HOME_Y]
gcode:
    # Home
    G28 Y0
    # Move away
    G1 Y220 F2400

[gcode_macro IDEX_HOME_X]
gcode:
    G28 X0
    ACTIVATE_EXTRUDER EXTRUDER=extruder1
    SET_DUAL_CARRIAGE CARRIAGE=1
    G1 X150 F6000
    T0

[z_tilt]
##	Use Z_TILT_ADJUST to level the bed left to right.
##	z_positions: Location of toolhead
z_positions:
	-88,0
	125,325	
	338,0
points:
	30,30
	125,205
	220,30
speed: 150
horizontal_move_z: 15
retries: 5
retry_tolerance: 0.01

[bed_mesh]
speed: 300
horizontal_move_z: 10
mesh_min: 30, 30
mesh_max: 220, 205
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5
algorithm: bicubic
relative_reference_index: 12

[idle_timeout]
timeout: 360000
gcode:
  TURN_OFF_HEATERS
  M18
  M107
  SET_PIN PIN=caselight VALUE=0




[gcode_macro print_start]
gcode:
    M117 Homing...                 ; display message
    {% set bedtemp = params.BED|int %}
    {% set hotendtemp = params.HOTEND|int %}
    {% set hotendtemp1 = params.HOTEND1|int %}
    M190 S{bedtemp}                            ; set & wait for bed temp
    M109 T0 S{hotendtemp}                         ; set & wait for hotend temp
    M109 T1 S{hotendtemp1}                         ; set & wait for hotend temp
   #1. ensure second toolhead is not used for homing or leveling
    {% if active_carriage== CARRIAGE_1 %} 
        T0
    {% endif %}
    #5. Prevent homing again if printer was already homed by T0 macro
#   (a homing check is included in T0 macro due to Cura inserting T0 at the 
#    start of every gcode (before print_start).  Klipper will cancel the print
#   if a toolhead change is called for while not homed.)   
    {% if printer.toolhead.homed_axes != "xyz" %}
        STATUS_HOMING  
        G28
    {% endif %}
    STATUS_LEVELING
    Z_TILT_ADJUST #level
    STATUS_HOMING
    G28 #home
    STATUS_READY
    BED_MESH_CALIBRATE Profile='default'

    #PURGE_LINE T0
    T0
    G90
    G0 X124 Y1 F6000

    G0 Z0.4
    G91
    G1 X-120 E25 F1200;
    G1 Y2
    G1 X120 E25 F1200;
    G1 E-1
    G92 E0;

    #PURGE_LINE T1
    T1
    G90
    G0 X126 Y1 F6000

    G0 Z0.4
    G91
    G1 X120 E25 F1200;
    G1 Y2
    G1 E-1
    G92 E0;

    G90
    G1 Z15.0 F600 ;move the platform down 15mm
    G92 E0 ;zero the extruded length again
    T0
    G1 F9000
   # M117 Printing...

[gcode_macro print_end]
#   Use PRINT_END for the slicer ending script - PLEASE CUSTOMISE THE SCRIPT FO$
gcode:
    M400                           ; wait for buffer to clear
    T0
    G92 E0                         ; zero the extruder
    G1 E-5.0 F3600                 ; retrac
    T1
    G92 E0                         ; zero the extruder
    G1 E-5.0 F3600                 ; retract
    T0
    G91                            ; relative positioning
    #G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
    M104 S0                        ; turn off hotend
    M140 S0                        ; turn off bed
    M106 S0                        ; turn off fan
    G1 Z20 F3000                    ; move nozzle up 20mm
    G90                            ; absolute positioning
    G0  X125 Y240 F3600            ; park nozzle at rear
    M117 Finished!                 ; display message
    TURN_OFF_HEATERS
    M107
    BED_MESH_CLEAR
    #SET_FAN_SPEED FAN=chamber_fan SPEED=0

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 48.694
#*# pid_ki = 1.336
#*# pid_kd = 443.723
#*#
#*# [extruder]
#*#
#*# [extruder1]
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.006250, -0.013750, -0.011875, -0.018750, -0.034375
#*# 	  -0.012500, -0.011875, -0.004375, -0.006875, -0.005000
#*# 	  -0.024375, -0.024375, 0.000000, 0.013125, 0.016875
#*# 	  -0.066875, -0.046250, -0.008125, 0.020000, 0.041875
#*# 	  -0.115000, -0.081250, -0.027500, 0.014375, 0.060000
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 30.0
#*# max_x = 220.0
#*# min_y = 30.0
#*# max_y = 205.0
#*#
#*# [stepper_z]
#*# position_endstop = 1.500
